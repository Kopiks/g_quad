bedtools sort -i "input" -s > "output"  : sort with strand


in

$ awk '$n == "m"' in > out: extract records with value m in column n. for multi conditions '($n...)&&('$x...)'
awk -F"\t" -v OFS='\t' '$3=="mRNA"' tair10.gff > tair_mrna.gff


samtools mpileup -g -f Chr2.fasta out.bam > var.bcf
bcftools view -v var.bcf > var.raw.vcf	


MULTIFASTA SPLIT:
awk '/^>/{s=++d".fasta"} {print > s}' <inputFile> 			


bowtie2 -p 4 -x ./A.thal/chr_all -1 ./ath1001/SRR1945868_1.fastq -2 ./ath1001/SRR1945868_2.fastq | samtools view -Sb - | samtools sort - SRR1945868_bowtie && samtools index SRR1945868_bowtie.bam && bowtie2 -p 4 --very-sensitive -v -x ./A.thal/chr_all -1 ./ath1001/SRR1945868_1.fastq -2 ./ath1001/SRR1945868_2.fastq | samtools view -Sb - | samtools sort - SRR1945868_bowtie_vs && samtools index SRR1945868_bowtie_vs.bam && bwa mem -t 4 ./A.thal/chr_all.fas ./ath1001/SRR1945868_1.fastq ./ath1001/SRR1945868_2.fastq | samtools view -Sb - | samtools sort - SRR1945868_mem && samtools index SRR1945868_mem.bam


bwa mem -t 4 -k 14 ./A.thal/chr_all.fas ./ath1001/SRR1945868_1.fastq ./ath1001/SRR1945868_2.fastq | samtools view -Sb - | samtools sort - SRR1945868_mem_k14 && samtools index SRR1945868_mem_k14.bam && bwa mem -t 4 -k 17 -W 50  ./A.thal/chr_all.fas ./ath1001/SRR1945868_1.fastq ./ath1001/SRR1945868_2.fastq | samtools view -Sb - | samtools sort - SRR1945868_mem_k17_w50 && samtools index SRR1945868_mem_k17_w50.bam &&  bwa mem -t 4 -intractg ./A.thal/chr_all.fas ./ath1001/SRR1945868_1.fastq ./ath1001/SRR1945868_2.fastq | samtools view -Sb - | samtools sort - SRR1945868_mem_intractg && samtools index SRR1945868_mem_intractg.bam

samtools view -f 2 -q 20 SRR1945758_mem.bam > filtered.bam
piotr@maple:~/Desktop/g_quad-master/g_quad$ samtools view -b -f 2 -q 20 SRR1945758_mem.bam > filtered.bam
piotr@maple:~/Desktop/g_quad-master/g_quad$ samtools flagstat filtered.bam
41124697 + 0 in total (QC-passed reads + QC-failed reads)
0 + 0 duplicates
41124697 + 0 mapped (100.00%:-nan%)
41124697 + 0 paired in sequencing
20592548 + 0 read1
20532149 + 0 read2
41124697 + 0 properly paired (100.00%:-nan%)
41124697 + 0 with itself and mate mapped
0 + 0 singletons (0.00%:-nan%)
2932 + 0 with mate mapped to a different chr
2932 + 0 with mate mapped to a different chr (mapQ>=5)


bedtools flank -i ../araport/araport_gene.gff -g ../A.thal/athal.genome -s -r 0 -l 1000 > ../araport/araport_promoter.gff ->get the promoters

sed 's/ChrM/Chrmt/g' araport_promoter_sorted.gff | sed -e 's/ChrC/Chrch/g' > sorted_proms.gff   (g-global; -e = stdin)

awk -F"\t" -v OFS='\t' '{print $1, $4-1, $5-1}' sort_prom.gff > sort_prom.bed

picard AddOrReplaceGroups INPUT != OUTPUT !!!!!!!!!!!!!
java -jar $picard AddOrReplaceReadGroups I=SRR1946553_mem.bam O=SRR19465553 RGID=foo RGLB=foo RGPL=foo RGPU=foo RGSM=SRR1946553

uwazaj na ChrC Chrch itd...


java -jar $GATK -T DepthOfCoverage -L ./araport/sort_prom.bed -I SRR1946329.bam -I SRR19465553.bam -o testoutput2 -R ./A.thal/chr_all.fa
z testoutput2_sample_interval_summary:
awk -F"\t" -v OFS="\t" '{printf("%s%s%s%s",$1,OFS,$3/2,OFS); for(i=5; i<= NF;i+=6) printf("%s%s",$i,(i+6>NF?"\n":OFS))}' -> interwal, avg interwalu(2zmienic na ilosc sampli), avg dla poszczegolnych sampli

java -Xmx8g -jar $picard MarkDuplicates INPUT=SRR1946329.bwa.bam OUTPUT=marked.bam METRICS_FILE=metrics.txt OPTICAL_DUPLICATE_PIXEL_DISTANCE=2500 CREATE_INDEX=true TMP_DIR=/tmp


java -jar $GATK -T HaplotypeCaller -R ../A.thal/chr_all.fa -I marked.bam -mmq 20 -rf DuplicateRead -rf MateSameStrand -rf BadCigar -rf BadMate -o marked_raw.vcf


bash:
for i in *; do samtools view -H $i; done


R:
x<-read.csv(file="deptharray",head=TRUE,sep="\t",row.names=1)
apply(x,2,ks.test,y="pnorm") kolo smirnov


python ../bams.py && cd ReadGroups && python ../../DepthOfCoverage.py /home/piotr/Desktop/g_quad-master/g_quad/A.thal/refseq.fa


